.gradle
/build/
!gradle/wrapper/gradle-wrapper.jar

### STS ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.imlbuildscript {
     	repositories {
     		maven {
     			url "https://plugins.gradle.org/m2/"
     		}
     		mavenCentral()
     	}

     	dependencies {
     		classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE')
     		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
     	}
     }

     plugins {
     	id 'org.springframework.boot' version '2.1.7.RELEASE'
     	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
     	id 'java'
     	id 'application'
     }

     apply plugin: 'com.palantir.docker'

     group = ''
     version = '0.0.1-SNAPSHOT'

     mainClassName = "br.com.financial.operations.MainApplication"
     sourceCompatibility = "11"
     targetCompatibility = "11"


     ext {
     	set('springCloudVersion', "Greenwich.SR2")
     	springfoxVersion = '2.9.2'
     }

     dependencies {

     	//SPRING
     	implementation 'org.springframework.boot:spring-boot-starter-actuator'
     	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
     	implementation 'org.springframework.boot:spring-boot-starter-web'
     	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

     	// Swagger
     	implementation "io.springfox:springfox-swagger2:${springfoxVersion}"
     	implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"

     	//GOOGLE LIBS
     	implementation (group: 'com.google.code.gson', name: 'gson')

     	//LOMBOK
     	compileOnly 'org.projectlombok:lombok'
     	annotationProcessor("org.projectlombok:lombok")

     	//DATABASE
     	runtimeOnly 'com.h2database:h2'

     	//TEST
     	testCompileOnly 'org.projectlombok:lombok'
     	testImplementation 'org.springframework.boot:spring-boot-starter-test'
     	testCompile(group: 'com.google.code.gson', name: 'gson')
     	testImplementation "com.h2database:h2"
     	testImplementation 'junit:junit'

     }

     compileJava {
     	options.encoding = 'UTF-8'
     }

     compileTestJava {
     	options.encoding = 'UTF-8'
     }

     test {
     	systemProperty 'spring.profiles.active', "test"
     }

     repositories {
     	mavenCentral()
     }

     bootJar {
     	baseName = 'financial-operations'
     	version =  '0.1.0'
     }

     task unpack(type: Copy) {
     	dependsOn bootJar
     	from(zipTree(tasks.bootJar.outputs.files.singleFile))
     	into("build/dependency")
     }

     docker {
     	name "${project.group}/${bootJar.baseName}"
     	copySpec.from(tasks.unpack.outputs).into("dependency")
     	buildArgs(['DEPENDENCY': "dependency"])
     }

     dependencyManagement {
     	imports {
     		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
     	}
     }

*.ipr
/out/

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/test/


# Created by https://www.gitignore.io/api/eclipse
# Edit at https://www.gitignore.io/?templates=eclipse

### Eclipse ###

.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

### Eclipse Patch ###
# Eclipse Core
.project

# JDT-specific (Eclipse Java Development Tools)
.classpath

# Annotation Processing
.apt_generated

.sts4-cache/

# End of https://www.gitignore.io/api/eclipse